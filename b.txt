PARTE EJECUCION
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': ['addi', '$t9', '$zero', '1'], 'PC+4': 1}
#################### INSTRUCTION DECODE ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000100001', 'inst': ['add', '$t9', '$zero', '$t0'], 'PC+4': 2}
#################### EXECUTION ####################
PC: 2 -> ['addi', '$t9', '$zero', '1']
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['addi', '$t9', '$zero', '1'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
#################### INSTRUCTION DECODE ####################
PC: 2 -> ['add', '$t9', '$zero', '$t0']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 2 -> ['add', '$t9', '$zero', '$t0']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00000000000001111000000000010100', 'inst': ['mul', '$t5', '$t0', '$t0'], 'PC+4': 3}
#################### MEM ####################
PC: 3 -> ['addi', '$t9', '$zero', '1']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '00111', 'RegWrite': 1, 'isnt': '', 'inst': ['addi', '$t9', '$zero', '1'], 'Add_result': 5, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 4, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> ['add', '$t9', '$zero', '$t0']
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['add', '$t9', '$zero', '$t0'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 4 -> ['mul', '$t5', '$t0', '$t0']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 4 -> ['addi', '$t6', '$zero', '2']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000011012', 'inst': ['div', '$t7', '$t5', '$t6'], 'PC+4': 5}
#################### WRITE BACK ####################
PC: 5 -> ['addi', '$t9', '$zero', '1']
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 5 -> ['add', '$t9', '$zero', '$t0']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': ['add', '$t9', '$zero', '$t0'], 'Add_result': 2, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'MemRead': 0}
#################### EXECUTION ####################
PC: 6 -> ['mul', '$t5', '$t0', '$t0']
ID/EX-> {'Rt': '00111', 'Rd': '10000', 'MemtoReg': 0, 'PC+4': 3, 'Funct': '010100', 'RegDst': 1, 'Rs': '00000', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['mul', '$t5', '$t0', '$t0'], 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '1000000000010100'}
ALU-> {'A': 0, 'Control': '0000', 'Zero': 0, 'B': 0, 'Result': 0}
#################### INSTRUCTION DECODE ####################
PC: 6 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 6 -> ['add', '$t9', '$zero', '$t0']
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 6 -> ['mul', '$t5', '$t0', '$t0']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': ['mul', '$t5', '$t0', '$t0'], 'Add_result': 1000000000010101, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 0, 'MemRead': 0}
#################### EXECUTION ####################
PC: 7 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 7 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 7 -> ['mul', '$t5', '$t0', '$t0']
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 7 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 43 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 43 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### INSTRUCTION FETCH ####################
PARTE EJECUCION
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': ['addi', '$t9', '$zero', '1'], 'PC+4': 1}
#################### INSTRUCTION DECODE ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000100001', 'inst': ['add', '$t9', '$zero', '$t0'], 'PC+4': 2}
#################### EXECUTION ####################
PC: 2 -> ['addi', '$t9', '$zero', '1']
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['addi', '$t9', '$zero', '1'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
#################### INSTRUCTION DECODE ####################
PC: 2 -> ['add', '$t9', '$zero', '$t0']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 2 -> ['add', '$t9', '$zero', '$t0']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00000000000001111000000000010100', 'inst': ['mul', '$t5', '$t0', '$t0'], 'PC+4': 3}
#################### MEM ####################
PC: 3 -> ['addi', '$t9', '$zero', '1']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '00111', 'RegWrite': 1, 'isnt': '', 'inst': ['addi', '$t9', '$zero', '1'], 'Add_result': 5, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 4, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> ['add', '$t9', '$zero', '$t0']
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['add', '$t9', '$zero', '$t0'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 4 -> ['mul', '$t5', '$t0', '$t0']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 4 -> ['addi', '$t6', '$zero', '2']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000011012', 'inst': ['div', '$t7', '$t5', '$t6'], 'PC+4': 5}
#################### WRITE BACK ####################
PC: 5 -> ['addi', '$t9', '$zero', '1']
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 5 -> ['add', '$t9', '$zero', '$t0']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': ['add', '$t9', '$zero', '$t0'], 'Add_result': 2, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'MemRead': 0}
#################### EXECUTION ####################
PC: 6 -> ['mul', '$t5', '$t0', '$t0']
ID/EX-> {'Rt': '00111', 'Rd': '10000', 'MemtoReg': 0, 'PC+4': 3, 'Funct': '010100', 'RegDst': 1, 'Rs': '00000', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['mul', '$t5', '$t0', '$t0'], 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '1000000000010100'}
ALU-> {'A': 0, 'Control': '0000', 'Zero': 0, 'B': 0, 'Result': 0}
#################### INSTRUCTION DECODE ####################
PC: 6 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 6 -> ['add', '$t9', '$zero', '$t0']
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 6 -> ['mul', '$t5', '$t0', '$t0']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': ['mul', '$t5', '$t0', '$t0'], 'Add_result': 1000000000010101, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 0, 'MemRead': 0}
#################### EXECUTION ####################
PC: 7 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 7 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 7 -> ['mul', '$t5', '$t0', '$t0']
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 7 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 8 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 9 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 10 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 11 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 12 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 13 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 14 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 15 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 16 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 17 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 18 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 19 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 20 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 21 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 22 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 23 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 24 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 25 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 26 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 27 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 28 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 29 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 30 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 31 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 32 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 33 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 34 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 35 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 36 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 37 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 38 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 39 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 40 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 41 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### WRITE BACK ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 42 -> ['div', '$t7', '$t5', '$t6']
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': ['div', '$t7', '$t5', '$t6'], 'Add_result': 3, 'Branch': 0, 'ReadData2': 2, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### EXECUTION ####################
PC: 43 -> ['div', '$t7', '$t5', '$t6']
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 2, 'ALUOp1': 1, 'inst': ['div', '$t7', '$t5', '$t6'], 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### INSTRUCTION DECODE ####################
PC: 43 -> ['div', '$t7', '$t5', '$t6']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 2}
#################### INSTRUCTION FETCH ####################
PARTE EJECUCION
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': ['addi', '$t9', '$zero', '1'], 'PC+4': 1}
#################### INSTRUCTION DECODE ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000100001', 'inst': ['add', '$t9', '$zero', '$t0'], 'PC+4': 2}
PARTE EJECUCION
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
IR: 00100000000001114
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': '', 'PC+4': 1}
#################### INSTRUCTION DECODE ####################
PC: 1 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
IR: 00100000000100001
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000100001', 'inst': '', 'PC+4': 2}
#################### EXECUTION ####################
PC: 2 -> 
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
#################### INSTRUCTION DECODE ####################
PC: 2 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 2 -> ['add', '$t9', '$zero', '$t0']
IR: 00000000000001111000000000010100
MUX PCSrc: 0
IF/ID-> {'Instruction': '00000000000001111000000000010100', 'inst': '', 'PC+4': 3}
#################### MEM ####################
PC: 3 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '00111', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 5, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 4, 'MemRead': 0}
#################### EXECUTION ####################
PC: 3 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 3 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 3 -> ['mul', '$t5', '$t0', '$t0']
IR: 00000000111001110110000000000000
MUX PCSrc: 0
IF/ID-> {'Instruction': '00000000111001110110000000000000', 'inst': '', 'PC+4': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 2, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '10000', 'MemtoReg': 0, 'PC+4': 3, 'Funct': '010100', 'RegDst': 1, 'Rs': '00000', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '1000000000010100'}
ALU-> {'A': 0, 'Control': '0000', 'Zero': 0, 'B': 0, 'Result': 0}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 1000000000010101, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 0, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### INSTRUCTION FETCH ####################
PC: 4 -> ['addi', '$t6', '$zero', '2']
IR: 00100000000011012
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000011012', 'inst': '', 'PC+4': 5}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 5 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 5 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 5 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 5 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 5 -> 
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 5 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
PARTE EJECUCION
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
IR: 00100000000001114
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': '', 'PC+4': 1}
#################### INSTRUCTION DECODE ####################
PC: 1 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
IR: 00100000000100001
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000100001', 'inst': '', 'PC+4': 2}
#################### EXECUTION ####################
PC: 2 -> 
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
#################### INSTRUCTION DECODE ####################
PC: 2 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 2 -> ['add', '$t9', '$zero', '$t0']
IR: 00000000000001111000000000010100
MUX PCSrc: 0
IF/ID-> {'Instruction': '00000000000001111000000000010100', 'inst': '', 'PC+4': 3}
#################### MEM ####################
PC: 3 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '00111', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 5, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 4, 'MemRead': 0}
#################### EXECUTION ####################
PC: 3 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 3 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 3 -> ['mul', '$t5', '$t0', '$t0']
IR: 00000000111001110110000000000000
MUX PCSrc: 0
IF/ID-> {'Instruction': '00000000111001110110000000000000', 'inst': '', 'PC+4': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 2, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '10000', 'MemtoReg': 0, 'PC+4': 3, 'Funct': '010100', 'RegDst': 1, 'Rs': '00000', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '1000000000010100'}
ALU-> {'A': 0, 'Control': '0000', 'Zero': 0, 'B': 0, 'Result': 0}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 1000000000010101, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 0, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00111', 'ReadData1': 4, 'ReadData2': 4}
#################### INSTRUCTION FETCH ####################
PC: 4 -> ['addi', '$t6', '$zero', '2']
IR: 00100000000011012
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000011012', 'inst': '', 'PC+4': 5}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 5 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 5 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 4, 'Funct': '000000', 'RegDst': 1, 'Rs': '00111', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 4, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 4, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 16}
#################### INSTRUCTION DECODE ####################
PC: 5 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '01101', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 5 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 110000000000001, 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 16, 'MemRead': 0}
#################### EXECUTION ####################
PC: 5 -> 
ID/EX-> {'Rt': '01101', 'Rd': '2', 'MemtoReg': 0, 'PC+4': 5, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '2'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '2', 'Result': 2}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
#################### MEM ####################
PC: 5 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01101', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Add_result': 3, 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 2, 'MemRead': 0}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 2
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 16
$zero: 0
PARTE EJECUCION
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
IR: 00100000000001114
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': '', 'PC+4': 1}
#################### INSTRUCTION DECODE ####################
PC: 0 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
IR: 00100000000001114
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': '', 'PC+4': 1}
#################### EXECUTION ####################
PC: 0 -> 
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
PARTE EJECUCION
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
IR: 00100000000001114
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': '', 'PC+4': 1}
#################### INSTRUCTION DECODE ####################
PC: 0 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
IR: 00100000000001114
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': '', 'PC+4': 1}
#################### EXECUTION ####################
PC: 0 -> 
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
#################### INSTRUCTION DECODE ####################
PC: 0 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 0 -> ['addi', '$t0', '$zero', '4']
IR: 00100000000001114
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000001114', 'inst': '', 'PC+4': 1}
#################### MEM ####################
PC: 0 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '00111', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 4, 'Address': 5, 'MemRead': 0}
#################### EXECUTION ####################
PC: 1 -> 
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
#################### INSTRUCTION DECODE ####################
PC: 1 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### INSTRUCTION FETCH ####################
PC: 1 -> ['addi', '$t9', '$zero', '1']
IR: 00100000000100001
MUX PCSrc: 0
IF/ID-> {'Instruction': '00100000000100001', 'inst': '', 'PC+4': 2}
#################### WRITE BACK ####################
PC: 1 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 1 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '00111', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 4, 'Address': 5, 'MemRead': 0}
#################### EXECUTION ####################
PC: 2 -> 
ID/EX-> {'Rt': '00111', 'Rd': '4', 'MemtoReg': 0, 'PC+4': 1, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '4'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '4', 'Result': 4}
#################### INSTRUCTION DECODE ####################
PC: 2 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 2 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 2 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '00111', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 4, 'Address': 5, 'MemRead': 0}
#################### EXECUTION ####################
PC: 3 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 3 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 3 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 0
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 3 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 4 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 4 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 0}
#################### WRITE BACK ####################
PC: 4 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 4 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 5 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 0, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 5 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 5 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 5 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 0, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 6 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 6 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 6 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 6 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 7 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 7 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 7 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 7 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 8 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 8 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 8 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 8 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 9 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 9 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 9 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 9 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 10 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 10 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 10 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 10 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 11 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 11 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 11 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 11 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 12 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 12 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 12 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 12 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 13 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 13 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 13 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 13 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 14 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 14 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 14 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 14 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 15 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 15 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 15 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 15 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 16 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 16 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 16 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 16 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 17 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 17 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 17 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 17 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 18 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 18 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 18 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 18 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 19 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 19 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 19 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 19 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 20 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 20 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 20 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 20 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 21 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 21 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 21 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 21 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 22 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 22 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 22 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 22 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 23 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 23 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 23 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 23 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 24 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 24 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 24 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 24 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 25 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 25 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 25 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 25 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 26 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 26 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 26 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 26 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 27 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 27 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 27 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 27 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 28 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 28 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 28 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 28 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 29 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 29 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 29 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 29 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 30 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 30 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 30 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 30 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 31 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 31 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 31 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 31 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 32 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 32 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 32 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 32 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 33 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 33 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 33 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 33 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 34 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 34 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 34 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 34 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 35 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 35 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 35 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 35 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 36 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 36 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 36 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 36 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 37 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 37 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### WRITE BACK ####################
PC: 37 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 37 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 38 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 38 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 0, 'ALUOp2': 1, 'MemRead': 0, 'ALUSrc': 1}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '10000', 'ReadReg1': '00000', 'ReadData1': 0, 'ReadData2': 1}
#################### INSTRUCTION FETCH ####################
PC: 38 -> ['mul', '$t5', '$t5', '$t0']
IR: 00000001100001110110000000000000
MUX PCSrc: 0
IF/ID-> {'Instruction': '00000001100001110110000000000000', 'inst': '', 'PC+4': 39}
#################### WRITE BACK ####################
PC: 38 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 38 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 39 -> 
ID/EX-> {'Rt': '10000', 'Rd': '1', 'MemtoReg': 0, 'PC+4': 2, 'Funct': '000001', 'RegDst': 0, 'Rs': '00000', 'ALUSrc': 1, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 1, 'ALUOp1': 1, 'inst': '', 'Opcode': '001000', 'ALUOp2': 1, 'MemRead': 0, 'Sign-extend_imm': '1'}
ALU-> {'A': 0, 'Control': '0110', 'Zero': 0, 'B': '1', 'Result': 1}
#################### INSTRUCTION DECODE ####################
PC: 39 -> 
CONTROL UNIT-> {'MemWrite': 0, 'RegWrite': 1, 'MemtoReg': 0, 'Branch': 0, 'ALUOp1': 1, 'RegDst': 1, 'ALUOp2': 0, 'MemRead': 0, 'ALUSrc': 0}
REGISTER MEMORY-> {'WriteData': 0, 'WriteReg': '', 'ReadReg2': '00111', 'ReadReg1': '01100', 'ReadData1': 0, 'ReadData2': 4}
#################### WRITE BACK ####################
PC: 39 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 39 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '10000', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 1, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 1, 'Address': 3, 'MemRead': 0}
#################### EXECUTION ####################
PC: 40 -> 
ID/EX-> {'Rt': '00111', 'Rd': '01100', 'MemtoReg': 0, 'PC+4': 39, 'Funct': '000000', 'RegDst': 1, 'Rs': '01100', 'ALUSrc': 0, 'RegWrite': 1, 'MemWrite': 0, 'ReadData1': 0, 'Branch': 0, 'ReadData2': 4, 'ALUOp1': 1, 'inst': '', 'Opcode': '000000', 'ALUOp2': 0, 'MemRead': 0, 'Sign-extend_imm': '0110000000000000'}
ALU-> {'A': 0, 'Control': '0001', 'Zero': 0, 'B': 4, 'Result': 0}
#################### WRITE BACK ####################
PC: 40 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
#################### MEM ####################
PC: 40 -> 
EX/MEM-> {'MemtoReg': 0, 'MUXRegDst_Output': '01100', 'RegWrite': 1, 'isnt': '', 'inst': '', 'Branch': 0, 'ReadData2': 4, 'MemWrite': 0, 'Zero': 0, 'ALU_Output': 0, 'Address': 110000000000039, 'MemRead': 0}
#################### WRITE BACK ####################
PC: 41 -> 
hi: 0

$t4: 0
lo: 0

$t6: 0
$t7: 0
$t9: 1
$t8: 0
$a1: 0
$a2: 0
$a3: 0
$t3: 0
$t2: 0
$t1: 0
$t0: 4
$v1: 0
$v0: 0
$t5: 0
$zero: 0
